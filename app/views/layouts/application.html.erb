<!DOCTYPE html>
<html>
  <head>
    <!--<title>
      <%= if content_for?(:title) then yield(:title) + ' | ' end %>
      | Hoàng Sang
    </title>-->
    <title><%= @title || "Blog17th.com" %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#1a344f">
    <meta name="description" content="Blog17th.com, blog về kỹ thuật, rèn luyện kỹ năng và chia sẻ kinh nghiệm phát triển bản thân dành cho tất cả lập trình viên" />
    <meta name="keywords" content="Blog17th, Hoàng Sang" />
    <meta name="author" content="Hoàng Sang" />

    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.24/js/dataTables.bootstrap5.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.24/css/dataTables.bootstrap5.min.css">
    <script>
      $(document).ready(function() {
          $('#tablesearch').DataTable();
      } );
    </script>
    <script src="https://cdn.tiny.cloud/1/y85pywkd046ctnwwsuxq5627d7kpn6y64j1vswrsn5s1w3qv/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/particles.js/2.0.0/particles.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/particles.js/2.0.0/particles.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/typed.js/2.0.11/typed.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/particles.js/2.0.0/particles.js" integrity="sha512-FG4FmjLeSvZ4T4WW7nwMqwA/sEzOn5l0jHjceT+N5UX/sTFaBgljBhFWpTRi+n4YuxIgvnokTX0IQ9ROE0Y0QA==" crossorigin="anonymous"></script>


  </head>

  <body>
    <!--Start Navbar-->
    <%= render 'layouts/navbar' %>
    <!--End Navbar-->

    <%= yield %>

    <!--Start Footer -->
    <%= render 'layouts/footer' %>
    <!-- End Footer --> 

    

    <script src="https://unpkg.com/ionicons@5.4.0/dist/ionicons.js"></script>
    <script>
      tinymce.init({
        selector: 'textarea',
        plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
        toolbar_mode: 'floating',
      });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.12"></script>
    <script>
    var typed = new Typed('.element', {
      /**
      * @property {array} strings strings to be typed
      * @property {string} stringsElement ID of element containing string children
      */
      strings: [
        'Take a trip.',
        'Bring your most incredible idea into reality.',
        'Compete to achieve more.',
        'Find the courage to be yourself.',
        'Fight for your love!',
        "Don't be afraid of responsibility.",
        'Remember the whole world is open to you!'
      ],
      stringsElement: null,

      /**
      * @property {number} typeSpeed type speed in milliseconds
      */
      typeSpeed: 100,

      /**
      * @property {number} startDelay time before typing starts in milliseconds
      */
      startDelay: 1000,

      /**
      * @property {number} backSpeed backspacing speed in milliseconds
      */
      backSpeed: 30,

      /**
      * @property {boolean} smartBackspace only backspace what doesn't match the previous string
      */
      smartBackspace: true,

      /**
      * @property {boolean} shuffle shuffle the strings
      */
      shuffle: false,

      /**
      * @property {number} backDelay time before backspacing in milliseconds
      */
      backDelay: 700,

      /**
      * @property {boolean} fadeOut Fade out instead of backspace
      * @property {string} fadeOutClass css class for fade animation
      * @property {boolean} fadeOutDelay Fade out delay in milliseconds
      */
      fadeOut: false,
      fadeOutClass: 'typed-fade-out',
      fadeOutDelay: 500,

      /**
      * @property {boolean} loop loop strings
      * @property {number} loopCount amount of loops
      */
      loop: true,
      loopCount: Infinity,

      /**
      * @property {boolean} showCursor show cursor
      * @property {string} cursorChar character for cursor
      * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>
      */
      showCursor: true,
      cursorChar: '_',
      autoInsertCss: true,

      /**
      * @property {string} attr attribute for typing
      * Ex: input placeholder, value, or just HTML text
      */
      attr: null,

      /**
      * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input
      */
      bindInputFocusEvents: false,

      /**
      * @property {string} contentType 'html' or 'null' for plaintext
      */
      contentType: 'html',

      /**
      * Before it begins typing
      * @param {Typed} self
      */
      onBegin: (self) => {},

      /**
      * All typing is complete
      * @param {Typed} self
      */
      onComplete: (self) => {},

      /**
      * Before each string is typed
      * @param {number} arrayPos
      * @param {Typed} self
      */
      preStringTyped: (arrayPos, self) => {},

      /**
      * After each string is typed
      * @param {number} arrayPos
      * @param {Typed} self
      */
      onStringTyped: (arrayPos, self) => {},

      /**
      * During looping, after last string is typed
      * @param {Typed} self
      */
      onLastStringBackspaced: (self) => {},

      /**
      * Typing has been stopped
      * @param {number} arrayPos
      * @param {Typed} self
      */
      onTypingPaused: (arrayPos, self) => {},

      /**
      * Typing has been started after being stopped
      * @param {number} arrayPos
      * @param {Typed} self
      */
      onTypingResumed: (arrayPos, self) => {},

      /**
      * After reset
      * @param {Typed} self
      */
      onReset: (self) => {},

      /**
      * After stop
      * @param {number} arrayPos
      * @param {Typed} self
      */
      onStop: (arrayPos, self) => {},

      /**
      * After start
      * @param {number} arrayPos
      * @param {Typed} self
      */
      onStart: (arrayPos, self) => {},

      /**
      * After destroy
      * @param {Typed} self
      */
      onDestroy: (self) => {}
    });
    </script>

    

  </body>
</html>
